[{"C:\\Users\\user1\\Downloads\\connect-four\\src\\theme.js":"1","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Home\\index.js":"2","C:\\Users\\user1\\Downloads\\connect-four\\src\\index.js":"3","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Lobby\\index.js":"4","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Game\\Menu\\index.js":"5","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Game\\Board\\index.js":"6","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Game\\index.js":"7","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Game\\Menu\\PlayerCard\\index.js":"8","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\common\\BaseModal\\DialogContent.js":"9","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\common\\Progress\\index.js":"10","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\common\\BaseModal\\DialogActions.js":"11","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Lobby\\PlayerItem\\index.js":"12","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Lobby\\SelectItem\\index.js":"13","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\App\\index.js":"14","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\common\\BaseModal\\DialogTitle.js":"15"},{"size":721,"mtime":1609294307141,"results":"16","hashOfConfig":"17"},{"size":4686,"mtime":1609313344765,"results":"18","hashOfConfig":"17"},{"size":374,"mtime":1609326493234,"results":"19","hashOfConfig":"17"},{"size":6519,"mtime":1609577326423,"results":"20","hashOfConfig":"17"},{"size":4778,"mtime":1609568471482,"results":"21","hashOfConfig":"17"},{"size":9289,"mtime":1609517337798,"results":"22","hashOfConfig":"17"},{"size":3293,"mtime":1609513624036,"results":"23","hashOfConfig":"17"},{"size":1639,"mtime":1609435963363,"results":"24","hashOfConfig":"17"},{"size":758,"mtime":1609071753650,"results":"25","hashOfConfig":"17"},{"size":602,"mtime":1609305555407,"results":"26","hashOfConfig":"17"},{"size":2355,"mtime":1609324091710,"results":"27","hashOfConfig":"17"},{"size":1501,"mtime":1609577218431,"results":"28","hashOfConfig":"17"},{"size":1280,"mtime":1609469690578,"results":"29","hashOfConfig":"17"},{"size":1613,"mtime":1609437917548,"results":"30","hashOfConfig":"17"},{"size":632,"mtime":1609071753713,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"2z0byb",{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user1\\Downloads\\connect-four\\src\\theme.js",[],["74","75"],"C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Home\\index.js",["76","77","78","79","80"],"import {\r\n  Grid,\r\n  Paper,\r\n  makeStyles,\r\n  Button,\r\n  Divider,\r\n  Typography,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport { BaseModal } from \"components/common/BaseModal\";\r\nimport { ALIGNMENT } from \"components/common/BaseModal/DialogActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: \"#EEEEEE\",\r\n    borderRadius: 30,\r\n    position: \"relative\",\r\n  },\r\n  topContainer: {\r\n    minHeight: 150,\r\n  },\r\n  paperRoot: {\r\n    borderRadius: 30,\r\n    padding: theme.spacing(2),\r\n    maxWidth: 500,\r\n  },\r\n  banner: {\r\n    width: \"auto\",\r\n    height: 300,\r\n    position: \"absolute\",\r\n    top: -100,\r\n  },\r\n  buttonContainer: {\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  icon: {\r\n    width: 25,\r\n    marginRight: theme.spacing(0.75),\r\n  },\r\n  startButton: {\r\n    background: \"#FF7243\",\r\n    boxShadow: \"10px 10px 50px #FF724373\",\r\n    borderRadius: 20,\r\n    letterSpacing: 1.5,\r\n    padding: theme.spacing(2, 3),\r\n    \"& .MuiButton-startIcon\": {\r\n      margin: 0,\r\n    },\r\n    \"& .MuiSvgIcon-root\": {\r\n      color: \"#FFF\",\r\n    },\r\n    \"& .MuiButton-label\": {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      flexWrap: \"no-wrap\",\r\n    },\r\n  },\r\n  startButtonContainer: {\r\n    margin: \"auto\",\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const [showNoOpModal, setShowNoOpModal] = useState(false);\r\n  return (\r\n    <>\r\n      <Grid className={classes.root}>\r\n        <Paper\r\n          className={classes.paperRoot}\r\n          component={Grid}\r\n          container\r\n          direction=\"column\"\r\n          wrap=\"nowrap\"\r\n          item\r\n          xs={12}\r\n        >\r\n          <Grid className={classes.topContainer} container wrap=\"nowrap\">\r\n            <Grid item xs={6} container align=\"center\" justify=\"center\">\r\n              <Box className={classes.startButtonContainer}>\r\n                <Grid className={classes.startButton}>\r\n                  <PlayCircleOutlineIcon fontSize=\"medium\" />\r\n                  <Typography>PLAY</Typography>\r\n                </Grid>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <img className={classes.banner} src=\"./4inarow.png\" />\r\n            </Grid>\r\n          </Grid>\r\n          <Divider />\r\n          <Grid container className={classes.buttonContainer} spacing={2}>\r\n            <Grid xs={6} item>\r\n              <Button\r\n                onClick={() => setShowNoOpModal(true)}\r\n                startIcon={<img className={classes.icon} src=\"./one.png\" />}\r\n                color=\"primary\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n              >\r\n                Custom Game\r\n              </Button>\r\n            </Grid>\r\n            <Grid xs={6} item>\r\n              <Button\r\n                onClick={() => setShowNoOpModal(true)}\r\n                startIcon={<img className={classes.icon} src=\"./online.png\" />}\r\n                color=\"primary\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n              >\r\n                Game Online\r\n              </Button>\r\n            </Grid>\r\n            <Grid xs={6} item>\r\n              <Link to=\"/lobby\">\r\n                <Button\r\n                  startIcon={<img className={classes.icon} src=\"./two.png\" />}\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                >\r\n                  Two Players\r\n                </Button>\r\n              </Link>\r\n            </Grid>\r\n            <Grid xs={6} item>\r\n              <Button\r\n                onClick={() => setShowNoOpModal(true)}\r\n                startIcon={\r\n                  <img className={classes.icon} src=\"./training.png\" />\r\n                }\r\n                color=\"primary\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n              >\r\n                Training Game\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Box className={classes.footer}>\r\n          <Typography component={Grid} item variant=\"caption\">\r\n            2020\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n      <BaseModal\r\n        isModalOpen={showNoOpModal}\r\n        fullWidth={false}\r\n        maxWidth=\"sm\"\r\n        successText=\"Close\"\r\n        alignment={ALIGNMENT.CENTER}\r\n        hideCancelButton\r\n        modalActions={{\r\n          onSuccessAction: () => setShowNoOpModal(false),\r\n        }}\r\n        title=\"Coming Soon!\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n",["81","82"],"C:\\Users\\user1\\Downloads\\connect-four\\src\\index.js",[],"C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Lobby\\index.js",["83","84","85"],"C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Game\\Menu\\index.js",[],"C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Game\\Board\\index.js",["86","87","88"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Grid, Paper, makeStyles, Button } from \"@material-ui/core\";\r\nimport { Stage, Layer, Circle, Image, Rect } from \"react-konva\";\r\nimport useImage from \"use-image\";\r\nimport { BoardContext } from \"../index\";\r\nimport { PlayersContext } from \"components/App\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    borderRadius: 30,\r\n  },\r\n}));\r\n\r\nconst options = {\r\n  circleRadius: 20,\r\n  spacing: 9.5,\r\n};\r\n\r\nconst PlayerAvatar = ({\r\n  players,\r\n  x,\r\n  y,\r\n  id,\r\n  radius,\r\n  width,\r\n  height,\r\n  ...props\r\n}) => {\r\n  const [image] = useImage(players[id].imgSrc);\r\n  const offset = 10;\r\n  return (\r\n    <>\r\n      <Image\r\n        image={image}\r\n        x={x - radius + offset / 2}\r\n        y={y - radius + offset / 2}\r\n        width={width - offset}\r\n        height={height - offset}\r\n        {...props}\r\n      />\r\n      <Circle\r\n        x={x}\r\n        y={y}\r\n        radius={radius}\r\n        stroke={players[id].color}\r\n        strokeWidth={5}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function Board({\r\n  players,\r\n  winner,\r\n  setWinner,\r\n  setLatestStep,\r\n  activePlayer,\r\n  setActivePlayer,\r\n}) {\r\n  const classes = useStyles();\r\n  const { circleRadius: r, spacing = 0 } = options;\r\n  const { board, setBoard } = useContext(BoardContext);\r\n  const { tournament } = useContext(PlayersContext);\r\n  const [activeColumn, setActiveColumn] = useState();\r\n  const [connectedTiles, setConnectedTiles] = useState([]);\r\n  useEffect(() => {\r\n    const result = doesConnectExist(activePlayer);\r\n    if (result) {\r\n      setConnectedTiles(result);\r\n      setWinner(activePlayer);\r\n    } else {\r\n      setConnectedTiles([]);\r\n    }\r\n  }, [board]);\r\n\r\n  const play = (playerId, columnIndex) => {\r\n    const nextAvailablePositionInColumn = (columnIndex) => {\r\n      for (let i = 0; i < 8; i++) {\r\n        // Check index = columnIndex of each row to find the first available position\r\n        if (board[columnIndex][i] === null) return i;\r\n      }\r\n      // If no position is available...\r\n      return -1;\r\n    };\r\n    const newPositionIndex = nextAvailablePositionInColumn(columnIndex);\r\n    if (newPositionIndex === -1) return false;\r\n    else {\r\n      // Create a copy of the old board\r\n      const newBoard = [...board.map((rowItem) => [...rowItem])];\r\n      // Add the latest play to the board\r\n      newBoard[columnIndex][newPositionIndex] = playerId;\r\n      setBoard(newBoard);\r\n    }\r\n    setLatestStep(columnIndex);\r\n  };\r\n  const doesConnectExist = (playerId, connectLimit = 4) => {\r\n    // Check rows\r\n    for (let i = 0; i < 8; i++) {\r\n      let startPosition = null;\r\n      let connectedTiles = [];\r\n      for (let j = 0; j < 8; j++) {\r\n        if (board[j][i] === playerId) {\r\n          if (startPosition === null) {\r\n            startPosition = j;\r\n          }\r\n          connectedTiles.push([j, i]);\r\n        } else {\r\n          if (startPosition >= 0) {\r\n            startPosition = null;\r\n            connectedTiles = [];\r\n          }\r\n        }\r\n        if (connectedTiles.length === connectLimit) return connectedTiles;\r\n      }\r\n    }\r\n    //  Check columns\r\n    for (let i = 0; i < 8; i++) {\r\n      let startPosition = null;\r\n      let connectedTiles = [];\r\n      for (let j = 0; j < 8; j++) {\r\n        if (board[i][j] === playerId) {\r\n          if (startPosition === null) {\r\n            startPosition = j;\r\n          }\r\n          connectedTiles.push([i, j]);\r\n        } else {\r\n          if (startPosition >= 0) {\r\n            startPosition = null;\r\n            connectedTiles = [];\r\n          }\r\n        }\r\n        if (connectedTiles.length === connectLimit) return connectedTiles;\r\n      }\r\n    }\r\n    //  Check forward diagonal - 1st Half\r\n    for (let i = 0; i < 8; i++) {\r\n      let k = 0;\r\n      let startPosition = null;\r\n      let connectedTiles = [];\r\n      for (let j = 7 - i; j < 8; j++) {\r\n        if (board[k][j] === playerId) {\r\n          if (startPosition === null) {\r\n            startPosition = j;\r\n          }\r\n          connectedTiles.push([k, j]);\r\n        } else {\r\n          if (startPosition >= 0) {\r\n            startPosition = null;\r\n            connectedTiles = [];\r\n          }\r\n        }\r\n        if (connectedTiles.length === connectLimit) return connectedTiles;\r\n        k++;\r\n      }\r\n    }\r\n    //  Check forward diagonal - 2nd Half\r\n    for (let i = 1; i < 8; i++) {\r\n      let k = i;\r\n      let startPosition = null;\r\n      let connectedTiles = [];\r\n      for (let j = 0; j < 8 - i; j++) {\r\n        if (board[k][j] === playerId) {\r\n          if (startPosition === null) {\r\n            startPosition = j;\r\n          }\r\n          connectedTiles.push([k, j]);\r\n        } else {\r\n          if (startPosition >= 0) {\r\n            startPosition = null;\r\n            connectedTiles = [];\r\n          }\r\n        }\r\n        if (connectedTiles.length === connectLimit) return connectedTiles;\r\n        k++;\r\n      }\r\n    }\r\n    //  Check backward diagonal - 1st Half\r\n    for (let i = 0; i < 8; i++) {\r\n      let k = 0;\r\n      let startPosition = null;\r\n      let connectedTiles = [];\r\n      for (let j = i; j >= 0; j--) {\r\n        if (board[k][j] === playerId) {\r\n          if (startPosition === null) {\r\n            startPosition = j;\r\n          }\r\n          connectedTiles.push([k, j]);\r\n        } else {\r\n          if (startPosition >= 0) {\r\n            startPosition = null;\r\n            connectedTiles = [];\r\n          }\r\n        }\r\n        if (connectedTiles.length === connectLimit) return connectedTiles;\r\n        k++;\r\n      }\r\n    }\r\n    //  Check backward diagonal - 2nd Half\r\n    for (let i = 1; i < 8; i++) {\r\n      let k = i;\r\n      let startPosition = null;\r\n      let connectedTiles = [];\r\n      for (let j = 7; j < 8 - i; j--) {\r\n        if (board[k][j] === playerId) {\r\n          if (startPosition === null) {\r\n            startPosition = j;\r\n          }\r\n          connectedTiles.push([k, j]);\r\n        } else {\r\n          if (startPosition >= 0) {\r\n            startPosition = null;\r\n            connectedTiles = [];\r\n          }\r\n        }\r\n        if (connectedTiles.length === connectLimit) return connectedTiles;\r\n        k++;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  const onPlay = (columnIndex) => {\r\n    play(activePlayer, columnIndex);\r\n    const playersArray = Object.keys(players).map((item) => parseInt(item));\r\n    setActivePlayer(\r\n      playersArray[\r\n        (playersArray.indexOf(activePlayer) + 1) % playersArray.length\r\n      ]\r\n    );\r\n  };\r\n  return (\r\n    <Paper\r\n      component={Grid}\r\n      className={classes.root}\r\n      item\r\n      md={8}\r\n      container\r\n      justify=\"center\"\r\n    >\r\n      <Stage\r\n        width={(r * 2 + spacing * 2) * 8}\r\n        height={(r * 2 + spacing * 2) * 8}\r\n      >\r\n        <Layer\r\n          offsetX={-r - spacing}\r\n          offsetY={r + spacing}\r\n          onMouseLeave={() => setActiveColumn(null)}\r\n        >\r\n          <Rect\r\n            offsetX={r + spacing}\r\n            offsetY={-r - spacing}\r\n            width={(r * 2 + spacing * 2) * 8}\r\n            height={(r * 2 + spacing * 2) * 8}\r\n            fill=\"#84A4FC\"\r\n            cornerRadius={30}\r\n          />\r\n          {board.map((column, columnIndex) => {\r\n            return column.map((row, rowIndex) => {\r\n              const isActiveColumn = activeColumn === columnIndex;\r\n              const isWinningTile =\r\n                connectedTiles.findIndex(\r\n                  ([x, y]) => x === columnIndex && y === rowIndex\r\n                ) > -1;\r\n              const getStrokeColor = () => {\r\n                if (isActiveColumn) return \"#FFA200\";\r\n              };\r\n              return (\r\n                <>\r\n                  <Circle\r\n                    x={(r + spacing) * 2 * columnIndex}\r\n                    y={(r + spacing) * 2 * (8 - rowIndex)}\r\n                    radius={r}\r\n                    stroke={getStrokeColor()}\r\n                    strokeWidth={3}\r\n                    shadowColor={isActiveColumn ? \"none\" : \"#434343\"}\r\n                    shadowOpacity={isActiveColumn ? 0 : 0.65}\r\n                    shadowBlur={isActiveColumn ? 0 : 7}\r\n                    fill={isActiveColumn ? \"#f5f5f5\" : \"white\"}\r\n                    onMouseEnter={() => !winner && setActiveColumn(columnIndex)}\r\n                    onClick={() => !winner && onPlay(columnIndex)}\r\n                  />\r\n                  {row && (\r\n                    <PlayerAvatar\r\n                      players={players}\r\n                      x={(r + spacing) * 2 * columnIndex}\r\n                      y={(r + spacing) * 2 * (8 - rowIndex)}\r\n                      width={r * 2}\r\n                      height={r * 2}\r\n                      radius={r}\r\n                      id={row}\r\n                    />\r\n                  )}\r\n                  {isWinningTile && (\r\n                    <Circle\r\n                      x={(r + spacing) * 2 * columnIndex}\r\n                      y={(r + spacing) * 2 * (8 - rowIndex)}\r\n                      radius={r + 5}\r\n                      stroke={\"#FFFF00\"}\r\n                      strokeWidth={5}\r\n                    />\r\n                  )}\r\n                </>\r\n              );\r\n            });\r\n          })}\r\n        </Layer>\r\n      </Stage>\r\n    </Paper>\r\n  );\r\n}\r\n",["89","90"],"C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Game\\index.js",["91","92","93","94","95"],"C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Game\\Menu\\PlayerCard\\index.js",["96","97","98"],"import React, { useContext } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles, lighten } from \"@material-ui/core/styles\";\r\nimport { PlayersContext } from \"components/App\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: ({ winner, activePlayer, players, playerId }) => ({\r\n    background: lighten(players[playerId].color, 0.7),\r\n    border:\r\n      activePlayer == playerId && !winner ? `2px solid #FFA200` : `1px solid #70707026`,\r\n    borderRadius: 15,\r\n  }),\r\n  avatar: ({ players, playerId }) => ({\r\n    border: `5px solid ${players[playerId].color}`,\r\n  }),\r\n  image: {\r\n    width: \"auto\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function PlayerCard({ winner, activePlayer, playerId, index }) {\r\n  const { players, tournament } = useContext(PlayersContext);\r\n  const classes = useStyles({ winner, activePlayer, players, playerId });\r\n  return (\r\n    <ListItem component={Grid} item className={classes.root}>\r\n      <ListItemAvatar>\r\n        <Avatar className={classes.avatar}>\r\n          <img className={classes.image} src={players[playerId].imgSrc} />\r\n        </Avatar>\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={players[playerId].name}\r\n        secondary={`Player ${index}`}\r\n      />\r\n      <ListItemText primary={\"Score\"} secondary={tournament.score[playerId]} />\r\n    </ListItem>\r\n  );\r\n}\r\n",["99","100"],"C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\common\\BaseModal\\DialogContent.js",[],"C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\common\\Progress\\index.js",["101"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: ({ size = 48 }) => ({\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -(size / 2),\r\n    marginLeft: -(size / 2),\r\n  }),\r\n}));\r\n\r\nfunction Progress(props) {\r\n  const classes = useStyles({ size: props.size });\r\n  return <CircularProgress className={classes.root} {...props} />;\r\n}\r\n\r\nProgress.propTypes = {};\r\n\r\nexport default Progress;\r\n","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\common\\BaseModal\\DialogActions.js",["102"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Progress from \"components/common/Progress\";\r\n\r\nconst PRIMARY = \"primary\";\r\nconst SECONDARY = \"secondary\";\r\nconst ERROR = \"error\";\r\n\r\nexport const palette = {\r\n  PRIMARY,\r\n  SECONDARY,\r\n  ERROR,\r\n};\r\n\r\nconst START = \"flex-start\";\r\nconst END = \"flex-end\";\r\nconst CENTER = \"center\";\r\n\r\nexport const ALIGNMENT = {\r\n  START,\r\n  END,\r\n  CENTER,\r\n};\r\n\r\nexport const DialogActions = function ({\r\n  onSuccessAction,\r\n  onCancelAction,\r\n  autoFocus = false,\r\n  successText,\r\n  cancelText,\r\n  dialogType = palette.PRIMARY,\r\n  isDisabled,\r\n  isSending = false,\r\n  alignment = ALIGNMENT.END,\r\n  hideCancelButton = false,\r\n}) {\r\n  const classes = useStyles({ dialogType });\r\n  return (\r\n    <MuiDialogActions className={classes.root}>\r\n      <Grid spacing={1} container direction=\"row\" justify={alignment}>\r\n        {hideCancelButton ? null : (\r\n          <Grid item>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={onCancelAction}\r\n            >\r\n              {cancelText}\r\n            </Button>\r\n          </Grid>\r\n        )}\r\n        <Grid item>\r\n          <Button\r\n            disabled={isSending || isDisabled}\r\n            variant=\"contained\"\r\n            onClick={() => onSuccessAction()}\r\n            color=\"primary\"\r\n            className={classes.successButton}\r\n            endIcon={isSending && <Progress size={24} color=\"primary\" />}\r\n          >\r\n            {successText}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </MuiDialogActions>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n    \"& .MuiButton-root\": {\r\n      padding: theme.spacing(1, 2),\r\n      borderRadius: 10\r\n    },\r\n  },\r\n  successButton: ({ dialogType }) => ({\r\n    backgroundColor:\r\n      dialogType === palette.ERROR\r\n        ? theme.palette.error.main\r\n        : theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      backgroundColor:\r\n        dialogType === palette.ERROR\r\n          ? theme.palette.error.dark\r\n          : theme.palette.primary.dark,\r\n    },\r\n  }),\r\n}));\r\n",["103","104"],"C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Lobby\\PlayerItem\\index.js",["105"],"C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\Lobby\\SelectItem\\index.js",["106"],"import React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  itemRoot: {\r\n    background: \"#EFF3FF\",\r\n    margin: 0,\r\n    marginBottom: theme.spacing(0.5),\r\n    borderRadius: 10,\r\n  },\r\n}));\r\n\r\nexport default function SelectItem({ initialValue, options, onChange }) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(initialValue);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(parseInt(event.target.value));\r\n    onChange(parseInt(event.target.value));\r\n  };\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <RadioGroup value={value} onChange={handleChange}>\r\n        {options.map(({ label, value }) => (\r\n          <FormControlLabel\r\n            key={value}\r\n            className={classes.itemRoot}\r\n            value={value}\r\n            control={<Radio color=\"primary\" />}\r\n            label={label}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\App\\index.js",["107"],"import React, { useState, createContext } from \"react\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\nimport Game from \"components/Game\";\nimport Home from \"components/Home\";\nimport Lobby from \"components/Lobby\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nexport const PlayersContext = createContext();\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100vw\",\n    height: \"100vh\",\n    overflowX: \"hidden\",\n    background: theme.palette.background.default,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [players, setPlayers] = useState({\n    1: {\n      name: \"\",\n      imgSrc: \"avatar01.png\",\n      color: \"#37AC5D\",\n    },\n    2: {\n      name: \"\",\n      imgSrc: \"avatar02.png\",\n      color: \"#F8D146\",\n    },\n  });\n  const [tournament, setTournament] = useState({\n    games: 3,\n    score: {\n      1: 0,\n      2: 0,\n    },\n    gameType: 1,\n    startWith: parseInt(Object.keys(players)[0]),\n  });\n  return (\n    <Router>\n      <PlayersContext.Provider\n        value={{ players, setPlayers, tournament, setTournament }}\n      >\n        <Grid\n          container\n          xs={12}\n          className={classes.root}\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <Switch>\n            <Route path=\"/lobby\">\n              <Lobby />\n            </Route>\n            <Route path=\"/game\">\n              <Game />\n            </Route>\n            <Route>\n              <Home />\n            </Route>\n          </Switch>\n        </Grid>\n      </PlayersContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\user1\\Downloads\\connect-four\\src\\components\\common\\BaseModal\\DialogTitle.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":94,"column":15,"nodeType":"114","endLine":94,"endColumn":69},{"ruleId":"112","severity":1,"message":"113","line":102,"column":28,"nodeType":"114","endLine":102,"endColumn":76},{"ruleId":"112","severity":1,"message":"113","line":113,"column":28,"nodeType":"114","endLine":113,"endColumn":79},{"ruleId":"112","severity":1,"message":"113","line":124,"column":30,"nodeType":"114","endLine":124,"endColumn":78},{"ruleId":"112","severity":1,"message":"113","line":137,"column":19,"nodeType":"114","endLine":137,"endColumn":72},{"ruleId":"108","replacedBy":"115"},{"ruleId":"110","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":9,"column":3,"nodeType":"119","messageId":"120","endLine":9,"endColumn":11},{"ruleId":"112","severity":1,"message":"113","line":158,"column":17,"nodeType":"114","endLine":158,"endColumn":71},{"ruleId":"112","severity":1,"message":"113","line":175,"column":17,"nodeType":"114","endLine":175,"endColumn":68},{"ruleId":"117","severity":1,"message":"121","line":2,"column":35,"nodeType":"119","messageId":"120","endLine":2,"endColumn":41},{"ruleId":"117","severity":1,"message":"122","line":64,"column":11,"nodeType":"119","messageId":"120","endLine":64,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":75,"column":6,"nodeType":"125","endLine":75,"endColumn":13,"suggestions":"126"},{"ruleId":"108","replacedBy":"127"},{"ruleId":"110","replacedBy":"128"},{"ruleId":"117","severity":1,"message":"121","line":2,"column":35,"nodeType":"119","messageId":"120","endLine":2,"endColumn":41},{"ruleId":"117","severity":1,"message":"129","line":25,"column":10,"nodeType":"119","messageId":"120","endLine":25,"endColumn":19},{"ruleId":"123","severity":1,"message":"130","line":38,"column":6,"nodeType":"125","endLine":38,"endColumn":14,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":42,"column":5,"nodeType":"134","messageId":"135","endLine":70,"endColumn":6},{"ruleId":"136","severity":1,"message":"137","line":66,"column":7,"nodeType":"138","messageId":"139","endLine":69,"endColumn":15},{"ruleId":"117","severity":1,"message":"140","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":15,"column":20,"nodeType":"143","messageId":"139","endLine":15,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":34,"column":11,"nodeType":"114","endLine":34,"endColumn":75},{"ruleId":"108","replacedBy":"144"},{"ruleId":"110","replacedBy":"145"},{"ruleId":"117","severity":1,"message":"146","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":17},{"ruleId":"117","severity":1,"message":"147","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":20},{"ruleId":"108","replacedBy":"148"},{"ruleId":"110","replacedBy":"149"},{"ruleId":"112","severity":1,"message":"113","line":35,"column":11,"nodeType":"114","endLine":35,"endColumn":75},{"ruleId":"117","severity":1,"message":"150","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":17},{"ruleId":"117","severity":1,"message":"151","line":6,"column":50,"nodeType":"119","messageId":"120","endLine":6,"endColumn":54},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["152"],["153"],"no-unused-vars","'Snackbar' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'tournament' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activePlayer', 'doesConnectExist', and 'setWinner'. Either include them or remove the dependency array. If 'setWinner' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["154"],["152"],["153"],"'whoStarts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setTournament' and 'tournament'. Either include them or remove the dependency array.",["155"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'Paper' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["152"],["153"],"'PropTypes' is defined but never used.","'Typography' is defined but never used.",["152"],["153"],"'FormLabel' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [activePlayer, board, doesConnectExist, setWinner]",{"range":"160","text":"161"},"Update the dependencies array to be: [setTournament, tournament, winner]",{"range":"162","text":"163"},[1743,1750],"[activePlayer, board, doesConnectExist, setWinner]",[1323,1331],"[setTournament, tournament, winner]"]